As part of a technical governance review, I need a full audit of the current development practices being used on the SoapBox Super App within Replit. Please respond with the following as soon as possible:

1. Current Standards in Use
What naming conventions are currently applied across:

File and folder structures

Variables, functions, and class names

API endpoints and route naming

Database tables and column names

What coding standards or style guides are currently followed?

Language-specific rules (e.g., TypeScript, React, Node.js)

Linting tools or formatting rules (e.g., ESLint, Prettier configs)

Component structure rules (if using frameworks like ShadCN, Tailwind, etc.)

What schema and database design practices are being followed?

Are there enforced naming standards or patterns?

Any schema migration/versioning approach?

What API design principles are followed?

REST vs GraphQL

Versioning, error handling, and auth conventions

Are there any CI/CD, environment, or Replit-specific deployment standards in place?

2. Competing or Inconsistent Standards
Are there conflicting conventions or duplicate approaches being used in different parts of the app?
(e.g., some routes use snake_case and others camelCase? Some files using PascalCase and others not?)

If so, identify all known inconsistencies or legacy practices still in the codebase.

3. Proposed Best Standards
Where current practices conflict, please recommend which single standard should be adopted going forward.

Include justification for why it is more scalable, maintainable, or industry-standard.

If possible, reference external guidelines or popular frameworks as benchmarks.

Identify any current practices that should be deprecated or refactored in favor of better ones.

ðŸ§  Notes:
Your recommendations should prioritize technical consistency, readability, scalability, and collaboration efficiency.

The goal is to define a single set of world-class development standards to govern all future work on SoapBox.

Once finalized, these will be codified into the SoapBox Development Standards document and enforced across the team.

