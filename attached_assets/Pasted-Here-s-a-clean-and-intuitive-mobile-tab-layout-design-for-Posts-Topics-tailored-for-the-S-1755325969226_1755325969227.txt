Here’s a clean and intuitive **mobile tab layout design for `Posts | Topics`**, tailored for the **SoapBox Super App’s Community section**. This layout works well inside the `/community` page (or wherever you're showing a church/ministry content feed) and lets users easily switch between **lightweight social posts** and **structured forum topics**.

---

## 📱 Design Goals

* **Clear separation** between informal posts and structured threads
* **Fast switching** between tabs
* **Touch-friendly** UI
* Scalable for future tabs (e.g. `Announcements`, `Reflections`, `Prayer Wall`)

---

## ✅ Recommended Tab Layout

### 📍 Placement:

* Appears **under the page header** on mobile (inside `/community`)
* Can reuse it on desktop for consistency

---

### 🧩 UI Structure

```
Header: [Community Name or My Community]

───────────────────────────────
[ Posts ] [ Topics ]
───────────────────────────────

<Render selected content here>
```

---

### 🧠 UX Behavior

| Action                         | Result                                      |
| ------------------------------ | ------------------------------------------- |
| Tap “Posts” tab                | Renders the social feed component           |
| Tap “Topics” tab               | Renders the forum-style component           |
| Default tab (optional)         | Can default to “Posts” or remember last tab |
| Route-based control (optional) | `/community?tab=topics` to deep-link        |

---

## 🧱 Code Structure (React + Tailwind Example)

### File: `CommunityPage.tsx`

```tsx
import React, { useState } from "react";
import PostsFeed from "@/components/community/PostsFeed";
import TopicsSection from "@/components/community/TopicsSection";

const CommunityPage: React.FC = () => {
  const [activeTab, setActiveTab] = useState<"posts" | "topics">("posts");

  return (
    <div className="p-4 max-w-4xl mx-auto">
      {/* Header */}
      <h1 className="text-xl font-bold mb-4">My Community</h1>

      {/* Tabs */}
      <div className="flex space-x-4 border-b mb-4">
        <button
          className={`pb-2 border-b-2 text-sm ${
            activeTab === "posts" ? "border-blue-500 font-semibold" : "border-transparent text-gray-500"
          }`}
          onClick={() => setActiveTab("posts")}
        >
          Posts
        </button>
        <button
          className={`pb-2 border-b-2 text-sm ${
            activeTab === "topics" ? "border-blue-500 font-semibold" : "border-transparent text-gray-500"
          }`}
          onClick={() => setActiveTab("topics")}
        >
          Topics
        </button>
      </div>

      {/* Tab Content */}
      <div>
        {activeTab === "posts" ? (
          <PostsFeed />
        ) : (
          <TopicsSection />
        )}
      </div>
    </div>
  );
};

export default CommunityPage;
```

---

## 🧩 Supporting Components

| Component           | Description                                                      |
| ------------------- | ---------------------------------------------------------------- |
| `PostsFeed.tsx`     | The regular community feed with reflections, photos, short posts |
| `TopicsSection.tsx` | Forum-style thread list (replaces old Discussions)               |

---

## ✅ Optional Enhancements

* Add URL-based control:

  * Use `react-router` `useSearchParams()` to allow deep linking: `/community?tab=topics`
* Show post count badges: `Posts (42) | Topics (12)`
* Animate tab transitions for better UX
* Persist last tab in `localStorage` for returning users

---

Would you like me to generate the `TopicsSection.tsx` component to slot into this tab system?
