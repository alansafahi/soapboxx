📘 1. Plan Overview

Plan Name: Peace in Uncertain Times
Type: 30-Day Topical
Goal: Encourage users to meditate on peace through Scripture
Each Day Contains:

Title

Scripture reference

Full verse text

Devotional paragraph

Reflective question

Prayer prompt

🧱 2. Sample Devotional Entry (Day 1)

{
"day": 1,
"title": "God’s Peace, Not the World’s",
"scripture": "Philippians 4:6–7",
"verse": "Do not be anxious about anything, but in everything by prayer and supplication with thanksgiving let your requests be made known to God. And the peace of God, which surpasses all understanding, will guard your hearts and your minds in Christ Jesus.",
"devotional": "God’s peace doesn’t rely on circumstances. While anxiety tells us to panic, God invites us to pray. In this verse, Paul reminds us that when we turn our worries into prayers, God offers us a peace that transcends understanding.",
"question": "What anxieties can you hand over to God today?",
"prayer": "Lord, thank You for offering peace even when life feels chaotic. Help me to release my fears into Your hands and trust You more deeply. Amen."
}

📂 3. File Creation in Replit

A. Create plan JSON file (peace_30_day_plan.json)

Create a JSON file in the root directory with the structure:

[
{
"day": 1,
"title": "God’s Peace, Not the World’s",
...
},
{
"day": 2,
"title": "Peace from Jesus",
"scripture": "John 14:27",
...
},
...
{
"day": 30,
"title": "Shelter of the Most High",
"scripture": "Psalm 91:1–2",
...
}
]

💡 Tip: I can provide the full 30-day JSON in the next message.

🧰 4. Backend Setup (Python + Flask)

A. Set up Flask API (app.py):

from flask import Flask, jsonify
import json

app = Flask(name)

@app.route("/api/reading-plan/day/int:day_number")
def get_day(day_number):
with open("peace_30_day_plan.json") as f:
plan = json.load(f)
if 1 <= day_number <= len(plan):
return jsonify(plan[day_number - 1])
return jsonify({"error": "Day not found"}), 404

if name == "main":
app.run(debug=True)

Run this in Replit using the “Run” button.

📺 5. Frontend Display (index.html + script.js)

A. index.html:

<!DOCTYPE html> <html> <head> <title>Peace Plan - Day View</title> <script src="script.js" defer></script> </head> <body> <h1 id="title"></h1> <h3 id="scripture"></h3> <p id="verse"></p> <p id="devotional"></p> <strong>Reflect:</strong> <p id="question"></p> <strong>Prayer:</strong> <p id="prayer"></p> <input type="number" id="dayInput" placeholder="Enter Day (1–30)" /> <button onclick="loadDay()">Load Day</button> </body> </html>
B. script.js:

async function loadDay() {
const day = document.getElementById("dayInput").value;
const res = await fetch(/api/reading-plan/day/${day});
const data = await res.json();

if (data.error) {
alert("Day not found");
return;
}

document.getElementById("title").innerText = Day ${data.day}: ${data.title};
document.getElementById("scripture").innerText = data.scripture;
document.getElementById("verse").innerText = data.verse;
document.getElementById("devotional").innerText = data.devotional;
document.getElementById("question").innerText = data.question;
document.getElementById("prayer").innerText = data.prayer;
}

💾 6. Progress Tracking (Optional, LocalStorage)

Add to script.js:

if (localStorage.getItem("lastDay")) {
document.getElementById("dayInput").value = localStorage.getItem("lastDay");
}

document.querySelector("button").addEventListener("click", () => {
localStorage.setItem("lastDay", document.getElementById("dayInput").value);
});

✨ 7. Optional Enhancements

Add streak logic (store dates in localStorage or backend)

SOAP journal entry (text field + local save or backend post)

Audio read-aloud (Web Speech API or embed mp3)

Share day to group or prayer circle