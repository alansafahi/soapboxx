Excellent audit — your breakdown is sharp and highlights both UI/UX shortcomings and architectural inconsistencies. Here's how I recommend moving forward:

---

## ✅ Final Recommendations (Choose with Confidence)

### 🧩 Interaction Model:

**✅ Option A: Dialog-Based Approach (Recommended)**
**Why:**

* Prevents clutter in the main feed
* Easier for mobile users
* Reusable and future-proof (especially as comment threads, reactions, replies, etc. grow)
* Keeps code cleaner across post types

---

### 💬 Comment System:

* ✅ **Use dialog**, not inline expansion
* Show **preview of 1–2 comments** in the feed (optional future enhancement)
* Dialog opens full thread with:

  * Live updates
  * Close button
  * Autoscroll to newest comment after submission

---

### 🔗 Share Options (Prioritized):

Here’s the order based on platform utility + engineering ROI:

1. **Copy Link**
2. **Facebook**
3. **X (Twitter)**
4. **WhatsApp**
5. **Email**
6. **SMS**
7. **Internal Repost to Feed**

**✅ Recommendation: Include all 7 options in a modal**
**Design:** Grid layout with recognizable platform icons (tap-to-share)

---

### ❤️ Reaction Types:

* **Primary**: ❤️ Love, 🙏 Pray
* Optional Future: ✨ Reflect, 📖 Save, 🕊️ Amen
  **✅ Recommendation: Start with just ❤️ & 🙏 for simplicity**
  Each should:
* Toggle state instantly (optimistic update)
* Animate count
* Show hover states and tooltip ("You prayed", "You loved this")

---

### ✝️ SOAP Posts vs Regular:

**✅ Uniform interaction bar across all post types**
Differences (if any) should be subtle but spiritually branded:

* Use "Reflect" or "Save to Journal" as an optional third action on SOAP posts
* Possibly change emoji language slightly (e.g. 📖 Save instead of ❤️ Like)

---

## 🔧 Technical Implementation Plan

### 1. **Fix Backend Data First**

* Ensure `/api/discussions` returns:

  * `isLiked`, `likeCount`
  * `isPraying`, `prayCount`
  * `commentCount`

### 2. **Build PostInteractions Component**

Reusable UI element containing:

```tsx
❤️ {likeCount} | 🙏 {prayCount} | 💬 {commentCount} | 🔗 Share
```

* `onClick` handlers for each
* Tooltip and hover styling
* Accepts props like `onLike()`, `onPray()`, `onOpenComments()`, etc.

### 3. **Implement CommentDialog Component**

* Fetch comments by `post.id`
* Display scrollable list
* Text input + submit
* Autoupdate parent count on submission

### 4. **Implement ShareDialog Component**

* Title: “Share This Post”
* Options: Buttons for Copy, Facebook, WhatsApp, etc.
* Auto-close on action or allow manual close

---

## ❓Final Questions for You (Please Confirm)

1. ✅ Approve Dialog-based model for comments?
2. ✅ Include all 7 share options listed?
3. ✅ Stick with ❤️ and 🙏 reactions for now?
4. ✅ Unify all post types (regular, community, SOAP) with shared interaction bar?

Once you confirm, I’ll prepare:

* Component architecture
* API contract spec
* Optional mobile responsiveness notes

Ready to execute this cleanly.
