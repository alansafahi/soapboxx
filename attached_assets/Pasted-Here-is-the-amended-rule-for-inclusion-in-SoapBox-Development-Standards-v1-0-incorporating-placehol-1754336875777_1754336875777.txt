Here is the amended rule for inclusion in SoapBox Development Standards v1.0, incorporating placeholders, mock data, and randomly generated test content:

📜 Rule Addition: No Hardcoding or Placeholder Data in Production
Rule Title: SBX-STD-004 — No Hardcoding or Placeholder Data in Production

Scope: Applies to all environments beyond local development, including staging, production, and public-facing test environments.

🔒 Rule Description:
Developers must not include hardcoded values, placeholder data, or randomly generated test content in staging or production environments.
This includes, but is not limited to:

Static user IDs

Fixed reading plan IDs

Default role assignments

Dummy prayer requests or SOAP entries

Placeholder profile photos or names

Randomized values (e.g., Math.random(), lorem ipsum) used for testing

✅ Allowed During Testing Only:
You may use hardcoded or dummy data during local development and testing, provided that:

It is explicitly labeled or isolated (e.g., if (process.env.NODE_ENV === 'development'))

It is fully removed or replaced with dynamic, user-generated, or system-derived values before merging to staging or production

🧠 What To Use Instead:
Instead of...	Use...
userId = 'abc123'	getCurrentUserId() from auth session
readingPlanId = 1	Retrieve from Supabase based on user selection
name = 'John Doe'	Use actual profile fields or fallback to anonymized user display name
Math.random() in production	Remove or replace with meaningful system-generated defaults

🔁 Enforcement Guidelines:
Code reviews must verify removal of all hardcoded, placeholder, or dummy values

CI/CD pipelines should reject builds if artifacts include strings like 'Lorem Ipsum', 'test-user', 'planId = 1', or Math.random() in production code

Feature flags or test environments should be used for internal demos instead

🚫 Example Violations:
js
Copy
Edit
// BAD – production hardcoded fallback
const planId = 1;

// BAD – fake name in staging
const name = "Jane Placeholder";

// BAD – random ID for production testing
const trackingId = "demo-" + Math.floor(Math.random() * 10000);
